package com.stackroute.newsapp.service;

import java.util.Optional;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.stackroute.newsapp.domain.News;
import com.stackroute.newsapp.exception.NewsAlreadyExistsException;
import com.stackroute.newsapp.exception.NewsNotFoundException;
import com.stackroute.newsapp.repository.NewsRepository;

@Service
public class NewsServiceImpl implements NewsService{

	@Autowired
	NewsRepository newsRepository;
	
	@Override
	public News updateNews( News News) throws NewsNotFoundException {
		return null;
	}

	@Override
	public boolean deleteNews(int newsId) throws NewsNotFoundException {
		return false;
	}

	@Override
	public News getNewsByUsernameAndTitle(String username, String title) throws NewsNotFoundException {
		
		return null;
	}

	
	public Optional<News> getNews(String username) {
		
		return newsRepository.findByUsername(username);
	}

	public int getNewsIdByUsernameAndTitle(String username, String title) {
		Optional<News> newsSet = getNews(username);
		int newsId = 0;
		//newsSet.filter(news -> title.equals(news.getTitle()).is
				
		return newsId;
	}

	@Override
	public boolean saveNews(News news) throws NewsAlreadyExistsException, NewsNotFoundException {
		final Optional<News> exists = newsRepository.findById(news.getNewsId());
		if(exists.isPresent()){
			throw new NewsAlreadyExistsException("News can not be saved. News Alredy exists.");
		}
		newsRepository.save(news);
		return true;
	}

	
}
