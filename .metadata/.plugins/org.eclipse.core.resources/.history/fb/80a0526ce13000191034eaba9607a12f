package com.stackroute.newsapp.repository;

import static org.assertj.core.api.Assertions.assertThat;

import java.nio.charset.Charset;
import java.util.Date;
import java.util.Optional;
import java.util.Random;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase.Replace;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

import com.stackroute.newsapp.controller.UserController;
import com.stackroute.newsapp.model.User;
import com.stackroute.newsapp.repositories.UserRepository;


@RunWith(SpringRunner.class)
@ContextConfiguration(classes={UserController.class})
@DataJpaTest
@AutoConfigureTestDatabase(replace = Replace.NONE)
public class UserRepositoryTest {

	
	@Autowired
	private UserRepository userRepository;
	private User user;
	
	@Before
	public void setUp() throws Exception {
		byte[] array = new byte[7]; 
	    new Random().nextBytes(array);
	    String username = new String(array, Charset.forName("UTF-8"));
		MockitoAnnotations.initMocks(this);
		user = new User(username, "pass", "firstname", "lastname", new Date());
	}
	@Ignore
	@Test
	public void testRegisterUserSuccess() {
		userRepository.save(user);
		User object = userRepository.findByUsernameAndPassword(user.getUsername(), user.getPassword());
		assertThat(object.equals(user));
	}
	
	@Ignore
	@Test
	public void testLoginUserSuccess() {
		userRepository.save(user);
		User object = userRepository.findByUsernameAndPassword(user.getUsername(), user.getPassword());
		assertThat(object.equals(user));
	}
}
